<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.funiter.del.IDelDAO">
	<!-- 업체 로그인 -->
	<select id="delLogin" resultType="java.lang.String">
		SELECT DEL_ID
		FROM TBL_DELIVER 
		WHERE DEL_ID=#{del_id} 
		AND DEL_PW = CRYPTPACK.ENCRYPT (#{del_pw}, #{del_pw})
	</select>
	
	<!-- 업체 회원 가입 시 인서트 -->
	<insert id="delsignupinfoinsert">
		INSERT INTO TBL_DELIVER 
		(DEL_CODE, DEL_ID, DEL_PW, DEL_NAME, DEL_LISENCE, DEL_OWNER, DEL_TEL, DEL_LOC, URL, INTRODUCE)
		VALUES (DEL_CODE_SEQ.NEXTVAL
		, #{del_id}
		, CRYPTPACK.ENCRYPT(#{del_pw}, #{del_pw})
		, #{del_name}
		, CONCAT(#{del_lisence1}, #{del_lisence2})
		, #{del_owner}
		, #{del_tel1} || #{del_tel2} || #{del_tel3} 
		, #{del_loc}
		, #{url, jdbcType=VARCHAR }
		, #{introduce, jdbcType=VARCHAR })
		
	</insert>
	<!-- 
	<insert id="delsignup3gopay">
		{ CALL PRC_DELPAY_INSERT(#{del_code}, #{bank_code}, #{del_account}, #{del_account_owner}) }
	</insert>
	 -->
		
	<!-- 가입 사항을 바탕으로 결제정보 출력 -->	
	<select id="delsignup3" resultType="com.funiter.del.DelsignupDTO">
		SELECT DEL_NAME, DEL_CODE, DEL_ID
		, SUBSTR(DEL_LISENCE, 1, 5) AS DEL_LISENCE1
		, SUBSTR(DEL_LISENCE, 6, 5) AS DEL_LISENCE2
		, SUBSTR(DEL_TEL, 1, 3) AS DEL_TEL1
		, SUBSTR(DEL_TEL, 4, 4) AS DEL_TEL2
		, SUBSTR(DEL_TEL, 8, 4) AS DEL_TEL3
		, TO_DATE(SYSDATE, 'YYYY/MM/DD') AS "SYSDATE"
		, TO_DATE(SYSDATE+30, 'YYYY/MM/DD') AS "NEXTPAYDATE"
		FROM TBL_DELIVER
		WHERE DEL_ID = #{del_id}
	</select> 
	
	
	<!-- 정기결제 사항 입력 및 결제내역에도 추가하는 프로시저 호출 -->
	<insert id="delgopay">
		{ CALL PRC_DELPAY_INSERT(#{del_code}, #{bank_code}, #{del_account}, #{del_account_owner}) }
	</insert>
	
	
	<insert id="deljobschedule">
		DECLARE
		  v_job_no NUMBER;
		BEGIN
		  DBMS_JOB.SUBMIT  ( job => v_job_no, 
		                     what => 'EXEC PRC_DELPAY_TEST2 (#{del_code});',
		                     next_date => SYSDATE,
		                     interval => 'SYSDATE + 1/60/24' );       
		  COMMIT;
		    INSERT INTO TESTEMPTY (SAVE) VALUEs (v_job_no);
		 
		  DBMS_OUTPUT.PUT_LINE('v_job_no : ' || v_job_no);
		END; 
	
	</insert>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 결제완료 전 철회  -->
	<delete id="delsignupwithdraw">
		DELETE
		FROM TBL_DELIVER
		WHERE DEL_ID=#{del_id} 
	</delete>
	
	
	
	<!-- 업체 결제내역 출력 -->
	<select id="delpaylist" resultType="com.funiter.del.DelpaylistDTO">
		SELECT ROWNUM, TRANSEFER_D, SERVICE_START_D || ' ~ ' || SERVICE_END_D AS "SERVICE_TERM", ETC, DEL_CHANGE_D, SYSDATE, DEL_CODE
		FROM TBL_DELIVER_PAYLIST
		WHERE DEL_CODE = (SELECT DEL_CODE
                          FROM TBL_DELIVER
                          WHERE DEL_ID = #{del_id})
        ORDER BY TRANSEFER_D            
                          
        <!--  
        SELECT ROWNUM, DP.DEL_PAY_START_D AS "TRANSEFER_D"
		, DP.DEL_PAY_START_D || ' ~ ' || (DP.DEL_PAY_START_D+30) AS "SERVICE_TERM"
		, PL.ETC
		, PL.DEL_CHANGE_D
		, SYSDATE
		, PL.DEL_CODE AS "DEL_CODE"
		FROM TBL_DELIVER_PAYLIST PL JOIN TBL_DELIVER_PAY DP
		ON PL.DEL_CODE = DP.DEL_CODE
		WHERE PL.DEL_CODE = (SELECT DEL_CODE
                          FROM TBL_DELIVER
                          WHERE DEL_ID = #{del_id})-->
	</select>
	
	<!-- 수정 폼에 들어가기 위한 재로그인 -->
	<select id="delupdateLogin" resultType="java.lang.String">
		SELECT DEL_ID
		FROM TBL_DELIVER 
		WHERE DEL_ID=#{del_id} 
		AND DEL_PW = CRYPTPACK.ENCRYPT (#{del_pw}, #{del_pw})
	
	</select>
	
	<!-- 수정 전 기존정보 출력 -->
	<select id="delupdate" resultType="com.funiter.del.DelsignupDTO">
		SELECT DEL_ID, DEL_NAME, SUBSTR(DEL_LISENCE, 1, 5) AS DEL_LISENCE1, SUBSTR(DEL_LISENCE, 6, 5) AS DEL_LISENCE2, DEL_OWNER
		, SUBSTR(DEL_TEL, 1, 3) AS DEL_TEL1, SUBSTR(DEL_TEL, 4, 4) AS DEL_TEL2, SUBSTR(DEL_TEL, 8, 4) AS DEL_TEL3
		, DEL_LOC ,URL, INTRODUCE
		FROM TBL_DELIVER
		WHERE DEL_ID = #{del_id}
	</select>
	
	<!-- 수정사항 반영 -->
	<update id="delupdate2">
	 	UPDATE TBL_DELIVER
		SET DEL_PW = CRYPTPACK.ENCRYPT(#{del_pw}, #{del_pw})
		, DEL_NAME = #{del_name}
		, DEL_LISENCE = CONCAT(#{del_lisence1}, #{del_lisence2})
		, DEL_OWNER = #{del_owner}
		, DEL_TEL = #{del_tel1} || #{del_tel2} || #{del_tel3} 
		, DEL_LOC = #{del_loc}
		, URL=#{url}
		, INTRODUCE=#{introduce}
		WHERE DEL_ID = #{del_id}
	</update>
	
	<!-- 업체 탈퇴요청  -->
	<!-- <delete id="delremove">
		DELETE
		FROM TBL_DELIVER
		WHERE DEL_ID=#{del_id} 
		AND DEL_PW = CRYPTPACK.ENCRYPT (#{del_pw}, #{del_pw})
	</delete> -->
	<update id="delremove">
		UPDATE TBL_DELIVER
		SET DEL_PW = CRYPTPACK.ENCRYPT(' ' , ' ')
		, DEL_NAME = ' '
		, DEL_LISENCE = ' '
		, DEL_OWNER =' '
		, DEL_TEL = ' ' 
		, DEL_LOC = ' '
		, URL=' '
		, INTRODUCE=' '
		WHERE DEL_ID = #{del_id}
        AND DEL_PW = CRYPTPACK.ENCRYPT (#{del_pw}, #{del_pw})
	</update>
	
	<!-- 정기결제 업체 가입내역 출력 -->
	<select id="delsignup3again" resultType="com.funiter.del.DelsignupDTO">
		SELECT DEL_NAME, DEL_CODE
		, SUBSTR(DEL_LISENCE, 1, 5) AS DEL_LISENCE1
		, SUBSTR(DEL_LISENCE, 6, 5) AS DEL_LISENCE2
		, SUBSTR(DEL_TEL, 1, 3) AS DEL_TEL1
		, SUBSTR(DEL_TEL, 4, 4) AS DEL_TEL2
		, SUBSTR(DEL_TEL, 8, 4) AS DEL_TEL3
		, TO_DATE(SYSDATE, 'YYYY/MM/DD') AS "SYSDATE"
		, TO_DATE(SYSDATE+30, 'YYYY/MM/DD') AS "NEXTPAYDATE"
		FROM TBL_DELIVER
		WHERE DEL_ID = #{del_id}
	</select>
	
	<!-- 은행 select box 출력-->
	<select id="delbankchoice" resultType="com.funiter.del.DelpayDTO">
		SELECT BANK_CODE, BANK_NAME
		FROM TBL_BANK
	</select>
	
	<!-- 정기결제 사항 입력 및 결제내역에도 추가하는 프로시저 호출 -->
	<insert id="delpayadd">
		
		<!-- INSERT ALL 
		INTO TBL_DELIVER_PAY (DEL_PAY_CODE, DEL_CODE, BANK_CODE, DEL_PAY_START_D, DEL_ACCOUNT, DEL_ACCOUNT_OWNER) 
		VALUES (DEL_PAY_CODE_SEQ.NEXTVAL, #{del_code}, #{bank_code}, SYSDATE, #{del_account}, #{del_account_owner})
		
		INTO TBL_DELIVER_PAYLIST 
(DEL_PAYLIST_CODE, DEL_CODE, TRANSEFER_D
, SERVICE_START_D, SERVICE_END_D, ETC, DEL_CHANGE_D)
VALUES (DEL_PAYLIST_CODE_SEQ.NEXTVAL, #{del_code}, SYSDATE, SYSDATE+1, SYSDATE+30, NULL, NULL) -->
		{ CALL PRC_DELPAY_INSERT(#{del_code}, #{bank_code}, #{del_account}, #{del_account_owner}) }
		
	</insert>
</mapper>